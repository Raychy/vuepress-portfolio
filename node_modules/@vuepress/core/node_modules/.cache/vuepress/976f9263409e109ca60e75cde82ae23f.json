{"remainingRequest":"C:\\Users\\racheal\\Documents\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\racheal\\Documents\\vuepress-starter\\docs\\.vuepress\\components\\homepage.vue?vue&type=template&id=7d61f11d&","dependencies":[{"path":"C:\\Users\\racheal\\Documents\\vuepress-starter\\docs\\.vuepress\\components\\homepage.vue","mtime":1611567364245},{"path":"C:\\Users\\racheal\\Documents\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\racheal\\Documents\\vuepress-starter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\racheal\\Documents\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\racheal\\Documents\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}